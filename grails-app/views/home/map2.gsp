<html><head>    <meta name="layout" content="main">    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.2.0/dist/leaflet.css"          integrity="sha512-M2wvCLH6DSRazYeZRIm1JnYyh22purTM+FDB5CsyxtQJYeKq83arPe5wgbNmcFXGqiSH2XR8dT/fJISVA1r/zQ=="          crossorigin=""/>    <script src="https://unpkg.com/leaflet@1.2.0/dist/leaflet.js"            integrity="sha512-lInM/apFSqyy1o6s89K4iQUKg6ppXEgsVxT35HbzUupEVRh2Eu9Wdl4tHj7dZO0s1uvplcYGmt3498TtHq+log=="            crossorigin=""></script>    <script src="https://code.jquery.com/jquery-2.2.4.min.js"></script>    <script type="text/javascript" src="<g:resource dir='javascripts' file='KML.js'/>"></script>    <style>    #map {        margin: 0;        height: 80vh;        background: #fff;        margin-top: -75px;    }    </style></head><body><div class="w-section">    <div id='map'></div></div><script type="text/javascript">    var map = L.map('map', {        center: [0, 0],        zoom: 1,        crs: L.CRS.EPSG4326    });    var wmsLayer = L.tileLayer.wms('https://maps.oceanobservatories.org/mapserv?map=/public/mgg/web/gmrt.marine-geo.org/htdocs/services/map/wms_merc.map&', {        layers: 'topo',        format: 'image/png',        transparent: true,        crs: L.CRS.EPSG4326,        attribution: 'Global Multi-Resolution Topography (GMRT), Version 3.2'    }).addTo(map);    var renderContext = {};    var serviceUrl = "https://ooinet.oceanobservatories.org/api/uframe/status/sites/RS";    $.ajax({        url: "/home/getSite",        async: false,        dataType: 'json',        success: function (data) {            renderContext = data;        }    });    //$.when(map).done(function() {    var arrayData = [];    $.each(renderContext.sites, function (geoJSON) {        //console.log('geoJSON');        //console.log(geoJSON);        //if (String(geoJSON.properties.code).indexOf('MOAS') < 0) {        arrayData.push(geoJSON.uid);        console.log(geoJSON)        //}    });    //console.log(arrayData);    var track = new L.KML("<g:resource dir='files' file='OOI_Glider_Lines.kml' />", {async: true});    track.on("loaded", function (e) {        map.fitBounds(e.target.getBounds());    });    map.addLayer(track);    var customIcon = L.icon({        iconUrl: '<g:resource file="images/map-icon.png" />',        iconSize: [39, 48],        iconAnchor: [20, 48],        popupAnchor: [1, -46]    });    /*var mooringIcon = new L.divIcon({className: 'mooringIcon', iconSize: [20, 20]});    var otherMooringIcon = new L.divIcon({className: 'otherMooringIcon', iconSize: [20, 20]});    var otherSitesIcon = new L.divIcon({className: 'otherSitesIcon', iconSize: [20, 20]});    var referencePlatforms = [];    var primaryArray = renderContext.platformId.substr(0,2);    _.each(renderContext.collection.toGeoJSON(), function(geoJSON) {        referencePlatforms.push(geoJSON);    });    var otherSites = [];    _.each(renderContext.collection.allSites.toGeoJSON(), function(geoJSON){        if (geoJSON.properties.code.indexOf('MOAS') == -1) {            otherSites.push(geoJSON);        }    });    // console.log('otherSites');    // console.log(otherSites);    var marker = {        type: 'Feature',        geometry: {            type: 'Point',            coordinates: [renderContext.lng, renderContext.lat]        },        properties: {            code: renderContext.collection.siteData.get('reference_designator'),            description: renderContext.collection.siteData.get('display_name')        }    };    // console.log('referencePlatforms');    // console.log(referencePlatforms);    var refPlatforms = [];    _.forEach(referencePlatforms, function(platforms){        $.merge(refPlatforms, platforms);    });*/    // console.log('refPlatforms');    // console.log(refPlatforms);    //});</script></body></html>